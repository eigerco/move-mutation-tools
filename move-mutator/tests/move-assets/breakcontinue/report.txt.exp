{
  "files": {
    "sources/Break.move": [
      {
        "module_func": "Break::smallest_factor",
        "tested": 35,
        "killed": 34,
        "mutants_alive_diffs": [
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n         let i = 2;\n-        while (i <= n) {\n+        while (i < n) {\n             if (n % i == 0) break;\n             i = i + 1\n         };\n"
        ],
        "mutants_killed_diff": [
          "--- original\n+++ modified\n@@ -1,7 +1,7 @@\n module TestAccount::Break {\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n-        let i = 2;\n+        let i = 0;\n         while (i <= n) {\n             if (n % i == 0) break;\n             i = i + 1\n",
          "--- original\n+++ modified\n@@ -1,7 +1,7 @@\n module TestAccount::Break {\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n-        let i = 2;\n+        let i = 18446744073709551615;\n         while (i <= n) {\n             if (n % i == 0) break;\n             i = i + 1\n",
          "--- original\n+++ modified\n@@ -1,7 +1,7 @@\n module TestAccount::Break {\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n-        let i = 2;\n+        let i = 3;\n         while (i <= n) {\n             if (n % i == 0) break;\n             i = i + 1\n",
          "--- original\n+++ modified\n@@ -1,7 +1,7 @@\n module TestAccount::Break {\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n-        let i = 2;\n+        let i = 1;\n         while (i <= n) {\n             if (n % i == 0) break;\n             i = i + 1\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n         let i = 2;\n-        while (i <= n) {\n+        while (true) {\n             if (n % i == 0) break;\n             i = i + 1\n         };\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n         let i = 2;\n-        while (i <= n) {\n+        while (false) {\n             if (n % i == 0) break;\n             i = i + 1\n         };\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n         let i = 2;\n-        while (i <= n) {\n+        while (!(i <= n)) {\n             if (n % i == 0) break;\n             i = i + 1\n         };\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n         let i = 2;\n-        while (i <= n) {\n+        while (i == n) {\n             if (n % i == 0) break;\n             i = i + 1\n         };\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n         let i = 2;\n-        while (i <= n) {\n+        while (i != n) {\n             if (n % i == 0) break;\n             i = i + 1\n         };\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n         let i = 2;\n-        while (i <= n) {\n+        while (i > n) {\n             if (n % i == 0) break;\n             i = i + 1\n         };\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun smallest_factor(n: u64): u64 {\n         // assuming the input is not 0 or 1\n         let i = 2;\n-        while (i <= n) {\n+        while (i >= n) {\n             if (n % i == 0) break;\n             i = i + 1\n         };\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (true) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (false) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (!(n % i == 0)) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n % i != 0) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n % i < 0) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n % i > 0) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n % i >= 0) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n + i == 0) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n - i == 0) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n * i == 0) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n / i == 0) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n % i == 18446744073709551615) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n % i == 1) break;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n % i == 0) continue;\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         // assuming the input is not 0 or 1\n         let i = 2;\n         while (i <= n) {\n-            if (n % i == 0) break;\n+            if (n % i == 0) {};\n             i = i + 1\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 2;\n         while (i <= n) {\n             if (n % i == 0) break;\n-            i = i + 1\n+            i = i - 1\n         };\n\n         i\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 2;\n         while (i <= n) {\n             if (n % i == 0) break;\n-            i = i + 1\n+            i = i * 1\n         };\n\n         i\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 2;\n         while (i <= n) {\n             if (n % i == 0) break;\n-            i = i + 1\n+            i = i / 1\n         };\n\n         i\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 2;\n         while (i <= n) {\n             if (n % i == 0) break;\n-            i = i + 1\n+            i = i % 1\n         };\n\n         i\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 2;\n         while (i <= n) {\n             if (n % i == 0) break;\n-            i = i + 1\n+            i = i + 0\n         };\n\n         i\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 2;\n         while (i <= n) {\n             if (n % i == 0) break;\n-            i = i + 1\n+            i = i + 18446744073709551615\n         };\n\n         i\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 2;\n         while (i <= n) {\n             if (n % i == 0) break;\n-            i = i + 1\n+            i = i + 2\n         };\n\n         i\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 2;\n         while (i <= n) {\n             if (n % i == 0) break;\n-            i = i + 1\n+            i = i + 0\n         };\n\n         i\n"
        ]
      }
    ],
    "sources/BreakContinue.move": [
      {
        "module_func": "BreakContinue::sum_intermediate",
        "tested": 45,
        "killed": 45,
        "mutants_alive_diffs": [],
        "mutants_killed_diff": [
          "--- original\n+++ modified\n@@ -1,6 +1,6 @@\n module TestAccount::BreakContinue {\n     fun sum_intermediate(n: u64): u64 {\n-        let sum = 0;\n+        let sum = 18446744073709551615;\n         let i = 0;\n         loop {\n             i = i + 1;\n",
          "--- original\n+++ modified\n@@ -1,6 +1,6 @@\n module TestAccount::BreakContinue {\n     fun sum_intermediate(n: u64): u64 {\n-        let sum = 0;\n+        let sum = 1;\n         let i = 0;\n         loop {\n             i = i + 1;\n",
          "--- original\n+++ modified\n@@ -1,7 +1,7 @@\n module TestAccount::BreakContinue {\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n-        let i = 0;\n+        let i = 18446744073709551615;\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n",
          "--- original\n+++ modified\n@@ -1,7 +1,7 @@\n module TestAccount::BreakContinue {\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n-        let i = 0;\n+        let i = 1;\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         loop {\n-            i = i + 1;\n+            i = i - 1;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         loop {\n-            i = i + 1;\n+            i = i * 1;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         loop {\n-            i = i + 1;\n+            i = i / 1;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         loop {\n-            i = i + 1;\n+            i = i % 1;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         loop {\n-            i = i + 1;\n+            i = i + 0;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         loop {\n-            i = i + 1;\n+            i = i + 18446744073709551615;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         loop {\n-            i = i + 1;\n+            i = i + 2;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         loop {\n-            i = i + 1;\n+            i = i + 0;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (true) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (false) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (!(i % 10 == 0)) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 != 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 < 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 > 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 >= 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i + 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i - 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i * 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i / 10 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 0 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 18446744073709551615 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 11 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 9 == 0) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 18446744073709551615) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 1) continue;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 0) break;\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         loop {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 0) {};\n             if (i > n) break;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (true) break;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (false) break;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (!(i > n)) break;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (i == n) break;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (i != n) break;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (i < n) break;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (i <= n) break;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (i >= n) break;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (i > n) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         loop {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            if (i > n) break;\n+            if (i > n) {};\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -6,7 +6,7 @@\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n-            sum = sum + i\n+            sum = sum - i\n         };\n\n         sum\n",
          "--- original\n+++ modified\n@@ -6,7 +6,7 @@\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n-            sum = sum + i\n+            sum = sum * i\n         };\n\n         sum\n",
          "--- original\n+++ modified\n@@ -6,7 +6,7 @@\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n-            sum = sum + i\n+            sum = sum / i\n         };\n\n         sum\n",
          "--- original\n+++ modified\n@@ -6,7 +6,7 @@\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             if (i > n) break;\n-            sum = sum + i\n+            sum = sum % i\n         };\n\n         sum\n"
        ]
      }
    ],
    "sources/Continue.move": [
      {
        "module_func": "Continue::sum_intermediate",
        "tested": 43,
        "killed": 42,
        "mutants_alive_diffs": [
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n         let i = 0;\n-        while (i < n) {\n+        while (i != n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n"
        ],
        "mutants_killed_diff": [
          "--- original\n+++ modified\n@@ -1,6 +1,6 @@\n module TestAccount::Continue {\n     fun sum_intermediate(n: u64): u64 {\n-        let sum = 0;\n+        let sum = 18446744073709551615;\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n",
          "--- original\n+++ modified\n@@ -1,6 +1,6 @@\n module TestAccount::Continue {\n     fun sum_intermediate(n: u64): u64 {\n-        let sum = 0;\n+        let sum = 1;\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n",
          "--- original\n+++ modified\n@@ -1,7 +1,7 @@\n module TestAccount::Continue {\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n-        let i = 0;\n+        let i = 18446744073709551615;\n         while (i < n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n",
          "--- original\n+++ modified\n@@ -1,7 +1,7 @@\n module TestAccount::Continue {\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n-        let i = 0;\n+        let i = 1;\n         while (i < n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n         let i = 0;\n-        while (i < n) {\n+        while (true) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n         let i = 0;\n-        while (i < n) {\n+        while (false) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n         let i = 0;\n-        while (i < n) {\n+        while (!(i < n)) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n         let i = 0;\n-        while (i < n) {\n+        while (i == n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n         let i = 0;\n-        while (i < n) {\n+        while (i > n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n         let i = 0;\n-        while (i < n) {\n+        while (i <= n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n",
          "--- original\n+++ modified\n@@ -2,7 +2,7 @@\n     fun sum_intermediate(n: u64): u64 {\n         let sum = 0;\n         let i = 0;\n-        while (i < n) {\n+        while (i >= n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         while (i < n) {\n-            i = i + 1;\n+            i = i - 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n         };\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         while (i < n) {\n-            i = i + 1;\n+            i = i * 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n         };\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         while (i < n) {\n-            i = i + 1;\n+            i = i / 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n         };\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         while (i < n) {\n-            i = i + 1;\n+            i = i % 1;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n         };\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         while (i < n) {\n-            i = i + 1;\n+            i = i + 0;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n         };\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         while (i < n) {\n-            i = i + 1;\n+            i = i + 18446744073709551615;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n         };\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         while (i < n) {\n-            i = i + 1;\n+            i = i + 2;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n         };\n",
          "--- original\n+++ modified\n@@ -3,7 +3,7 @@\n         let sum = 0;\n         let i = 0;\n         while (i < n) {\n-            i = i + 1;\n+            i = i + 0;\n             if (i % 10 == 0) continue;\n             sum = sum + i;\n         };\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (true) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (false) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (!(i % 10 == 0)) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 != 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 < 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 > 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 >= 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i + 10 == 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i - 10 == 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i * 10 == 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i / 10 == 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 0 == 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 18446744073709551615 == 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 11 == 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 9 == 0) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 18446744073709551615) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 1) continue;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 0) break;\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -4,7 +4,7 @@\n         let i = 0;\n         while (i < n) {\n             i = i + 1;\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 0) {};\n             sum = sum + i;\n         };\n\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         while (i < n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            sum = sum + i;\n+            sum = sum - i;\n         };\n\n         sum\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         while (i < n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            sum = sum + i;\n+            sum = sum * i;\n         };\n\n         sum\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         while (i < n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            sum = sum + i;\n+            sum = sum / i;\n         };\n\n         sum\n",
          "--- original\n+++ modified\n@@ -5,7 +5,7 @@\n         while (i < n) {\n             i = i + 1;\n             if (i % 10 == 0) continue;\n-            sum = sum + i;\n+            sum = sum % i;\n         };\n\n         sum\n"
        ]
      },
      {
        "module_func": "Continue::sum_intermediate_in_for",
        "tested": 49,
        "killed": 48,
        "mutants_alive_diffs": [
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 1..(n + 1)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n"
        ],
        "mutants_killed_diff": [
          "--- original\n+++ modified\n@@ -16,7 +16,7 @@\n     // It tells us we could improve the code by starting counting from 1,\n     // since adding zero to the sum doesn't make much sense.\n     fun sum_intermediate_in_for(n: u64): u64 {\n-        let sum = 0;\n+        let sum = 18446744073709551615;\n\n         for (i in 0..(n + 1)) {\n             if (i % 10 == 0) continue;\n",
          "--- original\n+++ modified\n@@ -16,7 +16,7 @@\n     // It tells us we could improve the code by starting counting from 1,\n     // since adding zero to the sum doesn't make much sense.\n     fun sum_intermediate_in_for(n: u64): u64 {\n-        let sum = 0;\n+        let sum = 1;\n\n         for (i in 0..(n + 1)) {\n             if (i % 10 == 0) continue;\n",
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 18446744073709551615..(n + 1)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        true;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        false;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 0..(n - 1)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 0..(n * 1)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 0..(n / 1)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 0..(n % 1)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 0..(n + 0)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 0..(n + 18446744073709551615)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 0..(n + 2)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -18,7 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n+        for (i in 0..(n + 0)) {\n             if (i % 10 == 0) continue;\n             sum = sum + i\n         };\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        true;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        false;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        true;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        false;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        true;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        false;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        0;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        18446744073709551615;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        2;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        0;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        true;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -18,10 +18,7 @@\n     fun sum_intermediate_in_for(n: u64): u64 {\n         let sum = 0;\n\n-        for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n-            sum = sum + i\n-        };\n+        false;\n\n         sum\n     }\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (true) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (false) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (!(i % 10 == 0)) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 10 != 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 10 < 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 10 > 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 10 >= 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i + 10 == 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i - 10 == 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i * 10 == 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i / 10 == 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 0 == 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 18446744073709551615 == 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 11 == 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 9 == 0) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 18446744073709551615) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 1) continue;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 0) break;\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -19,7 +19,7 @@\n         let sum = 0;\n\n         for (i in 0..(n + 1)) {\n-            if (i % 10 == 0) continue;\n+            if (i % 10 == 0) {};\n             sum = sum + i\n         };\n\n",
          "--- original\n+++ modified\n@@ -20,7 +20,7 @@\n\n         for (i in 0..(n + 1)) {\n             if (i % 10 == 0) continue;\n-            sum = sum + i\n+            sum = sum - i\n         };\n\n         sum\n",
          "--- original\n+++ modified\n@@ -20,7 +20,7 @@\n\n         for (i in 0..(n + 1)) {\n             if (i % 10 == 0) continue;\n-            sum = sum + i\n+            sum = sum * i\n         };\n\n         sum\n",
          "--- original\n+++ modified\n@@ -20,7 +20,7 @@\n\n         for (i in 0..(n + 1)) {\n             if (i % 10 == 0) continue;\n-            sum = sum + i\n+            sum = sum / i\n         };\n\n         sum\n",
          "--- original\n+++ modified\n@@ -20,7 +20,7 @@\n\n         for (i in 0..(n + 1)) {\n             if (i % 10 == 0) continue;\n-            sum = sum + i\n+            sum = sum % i\n         };\n\n         sum\n"
        ]
      }
    ]
  },
  "package_dir": "move-spec-testing/move-mutator/tests/move-assets/breakcontinue"
}
